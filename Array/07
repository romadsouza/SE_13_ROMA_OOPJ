import java.util.ArrayList;
import java.util.List;

// Tester class
public class PermutationFinderTest {
    public static void main(String[] args) {
        String input = "abc";
        PermutationFinder finder = new PermutationFinder();
        String[] permutations = finder.findPermutations(input);
        
        // Print the permutations
        System.out.println("Permutations of the string \"" + input + "\":");
        for (String perm : permutations) {
            System.out.println(perm);
        }
    }
}

// PermutationFinder class
class PermutationFinder {
    
    // Method to find all permutations of the string
    public String[] findPermutations(String str) {
        List<String> result = new ArrayList<>();
        permute(str.toCharArray(), 0, result);
        return result.toArray(new String[0]); // Convert List to String array
    }

    // Helper method to generate permutations using backtracking
    private void permute(char[] arr, int index, List<String> result) {
        if (index == arr.length - 1) {
            result.add(new String(arr)); // Add permutation to the result list
        } else {
            for (int i = index; i < arr.length; i++) {
                swap(arr, index, i); // Swap characters
                permute(arr, index + 1, result); // Recur
                swap(arr, index, i); // Backtrack to restore the original order
            }
        }
    }

    // Utility method to swap characters in an array
    private void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
