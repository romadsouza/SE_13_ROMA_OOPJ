import java.util.ArrayList;
import java.util.List;

// Tester class
public class SwiftFood {
    public static void main(String[] args) {
        // Create food items
        Food food1 = new Food("F001", "Burger", 5.99);
        Food food2 = new Food("F002", "Pizza", 7.99);
        
        // Create a list of food items
        List<Food> foodItems = new ArrayList<>();
        foodItems.add(food1);
        foodItems.add(food2);
        
        // Create an order
        Order order = new Order("O001", foodItems);
        
        // Display order details
        System.out.println("Order ID: " + order.getOrderId());
        System.out.println("Total Price: $" + order.getTotalPrice());
    }
}

// Food class
class Food {
    // Private instance variables
    private String foodId;
    private String foodName;
    private double price;

    // Constructor
    public Food(String foodId, String foodName, double price) {
        this.foodId = foodId;
        this.foodName = foodName;
        this.price = price;
    }

    // Getter and Setter methods
    public String getFoodId() {
        return foodId;
    }

    public void setFoodId(String foodId) {
        this.foodId = foodId;
    }

    public String getFoodName() {
        return foodName;
    }

    public void setFoodName(String foodName) {
        this.foodName = foodName;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }
}

// Order class
class Order {
    // Private instance variables
    private String orderId;
    private List<Food> foodItems;
    private double totalPrice;

    // Constructor
    public Order(String orderId, List<Food> foodItems) {
        this.orderId = orderId;
        this.foodItems = foodItems;
        calculateTotalPrice(); // Calculate total price when the order is created
    }

    // Getter and Setter methods
    public String getOrderId() {
        return orderId;
    }

    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public List<Food> getFoodItems() {
        return foodItems;
    }

    public void setFoodItems(List<Food> foodItems) {
        this.foodItems = foodItems;
        calculateTotalPrice(); // Recalculate total price when food items change
    }

    public double getTotalPrice() {
        return totalPrice;
    }

    // Method to calculate total price
    private void calculateTotalPrice() {
        totalPrice = 0;
        for (Food food : foodItems) {
            totalPrice += food.getPrice();
        }
    }
}
